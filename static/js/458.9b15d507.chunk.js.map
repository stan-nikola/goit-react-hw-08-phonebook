{"version":3,"file":"static/js/458.9b15d507.chunk.js","mappings":"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","sources":["components/Modal/Modal.styled.jsx","components/Modal/Modal.jsx","redux/contacts/selectors.js","components/hooks/useContacts.jsx","components/ContactForm/ContactForm.styled.jsx","components/ContactForm/ContactForm.jsx","components/ContactsList/ContactsList.styled.jsx","components/ContactsList/ContactsListItem.jsx","components/ContactsList/ContactsList.jsx","components/ContactsFilter/ContactsFilter.styled..jsx","components/ContactsFilter/ContactsFilter.jsx","components/ContactsCount/ContactsCount.styled.jsx","components/ContactsCount/ContactsCount.jsx","components/AddContactButton/AddContactButton.styled.jsx","components/AddContactButton/AddContactButton.jsx","pages/PageStyles/Contacts.styled.jsx","pages/Contacts.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Backdrop = styled.div`\n  position: fixed;\n  width: 100%;\n  height: 100%;\n  top: 0;\n  left: 0;\n  backdrop-filter: blur(3px);\n`;\n\nexport const ModalWindow = styled.div`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n\n  height: 480px;\n  width: 300px;\n  padding: ${p => p.theme.space[3]};\n  background-color: ${p => p.theme.colors.secondaryBg};\n  box-shadow: ${p => p.theme.shadows.items};\n  @media screen and (min-width: 768px) {\n    width: 400px;\n    height: 450px;\n  }\n`;\n","import { useEffect } from 'react';\nimport { PropTypes } from 'prop-types';\nimport { createPortal } from 'react-dom';\nimport { Backdrop, ModalWindow } from './Modal.styled';\n\nconst modalRoot = document.getElementById('modal-root');\n\nexport function Modal({ modalToggle, children }) {\n  useEffect(() => {\n    window.addEventListener('keydown', handleMultiClose);\n\n    return () => {\n      window.removeEventListener('keydown', handleMultiClose);\n    };\n  });\n\n  const handleMultiClose = e => {\n    if (e.currentTarget === e.target || e.code === 'Escape') {\n      modalToggle();\n    }\n  };\n  return createPortal(\n    <Backdrop onClick={handleMultiClose}>\n      <ModalWindow>{children}</ModalWindow>\n    </Backdrop>,\n    modalRoot\n  );\n}\n\nModal.propTypes = {\n  modalToggle: PropTypes.func.isRequired,\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node,\n  ]).isRequired,\n};\n","export const selectContacts = state => state.contacts.items;\nexport const selectFilter = state => state.filter;\nexport const selectIsLoading = state => state.contacts.isLoading;\n","import { useSelector } from 'react-redux';\nimport {\n  selectContacts,\n  selectFilter,\n  selectIsLoading,\n} from 'redux/contacts/selectors';\n\nexport const useContacts = () => {\n  const contacts = useSelector(selectContacts);\n  const filter = useSelector(selectFilter);\n  const contactOperationLoading = useSelector(selectIsLoading);\n\n  return {\n    contacts,\n    filter,\n    contactOperationLoading,\n  };\n};\n","import styled from '@emotion/styled';\nimport { FiAlertTriangle } from 'react-icons/fi';\nimport PhoneInput from 'react-phone-input-2';\n\nexport const CloseModalBtn = styled.button`\n  position: absolute;\n  top: -5px;\n  right: -5px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  border: none;\n  margin: 10px;\n  width: 36px;\n  height: 36px;\n\n  transition: color 250ms linear, box-shadow 250ms linear;\n  svg {\n    fill: currentColor;\n    width: 26px;\n    height: 26px;\n  }\n  &:hover,\n  &:focus {\n    color: #f70606;\n  }\n`;\n\nexport const ModalTitle = styled.h3`\n  text-align: center;\n  font-weight: ${p => p.theme.fontWeights.bold};\n  font-size: ${p => p.theme.fontSizes.ml};\n  margin: ${p => p.theme.space[4]} 0;\n`;\n\nexport const Label = styled.label`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  &:not(:last-child) {\n    margin-bottom: ${p => p.theme.space[3]};\n  }\n`;\n\nexport const LabelName = styled.span`\n  font-weight: ${p => p.theme.fontWeights.bold};\n  margin-bottom: ${p => p.theme.space[2]};\n`;\n\nfunction nameInputBorderColorChange({ value }) {\n  if (value.length <= 2 || value.length >= 20) {\n    return p => p.theme.colors.errorBg;\n  }\n  return '#CACACA';\n}\nfunction nameInputBgColorChange({ value }) {\n  if (value.length <= 2 || value.length >= 20) {\n    return p => p.theme.colors.error;\n  }\n}\n\nexport const InputName = styled.input`\n  height: 35px;\n  width: 260px;\n\n  padding: 2px 10px;\n  outline: none;\n  transition: border-color 250ms linear, background-color 250ms linear;\n  border: 1px solid;\n  border-radius: ${p => p.theme.radii.none};\n\n  border-color: ${nameInputBorderColorChange};\n  background-color: ${nameInputBgColorChange};\n  @media screen and (min-width: 768px) {\n    width: 300px;\n  }\n`;\n\nexport const PhoneInputStyled = styled(PhoneInput)`\n  .form-control {\n    border-radius: ${p => p.theme.radii.none} !important;\n    width: 260px !important;\n    @media screen and (min-width: 768px) {\n      width: 300px !important;\n    }\n  }\n`;\n\nexport const ErrorMessage = styled.p`\n  position: absolute;\n  bottom: 130px;\n  right: 50%;\n  transform: translateX(50%);\n  z-index: 10;\n  width: 250px;\n  font-style: italic;\n  font-size: ${p => p.theme.fontSizes.s};\n  text-align: center;\n  border: ${p => p.theme.borders.light};\n  border-color: ${p => p.theme.colors.errorBg};\n  padding: ${p => p.theme.space[1]};\n  background-color: ${p => p.theme.colors.error};\n  border-radius: ${p => p.theme.radii.normal};\n  @media screen and (min-width: 768px) {\n    width: 300px;\n  }\n`;\n\nexport const ErrorIcon = styled(FiAlertTriangle)`\n  position: absolute;\n  top: -11px;\n  left: -11px;\n\n  width: 20px;\n  height: 20px;\n  fill: yellow;\n  border: none;\n  color: ${p => p.theme.colors.secondaryBorder};\n`;\n","import { useState, useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { PropTypes } from 'prop-types';\n\nimport 'react-phone-input-2/lib/style.css';\nimport { addContact } from 'redux/contacts/operations';\nimport { useContacts } from 'components/hooks/useContacts';\nimport { updateContact } from './../../redux/contacts/operations';\n\nimport {\n  CloseModalBtn,\n  ErrorIcon,\n  ErrorMessage,\n  InputName,\n  Label,\n  LabelName,\n  ModalTitle,\n  PhoneInputStyled,\n} from './ContactForm.styled';\nimport { FiX } from 'react-icons/fi';\nimport { MdOutlineContactPhone } from 'react-icons/md';\nimport { Box } from '@chakra-ui/react';\nimport { Button } from '@chakra-ui/react';\n\nexport const ContactForm = ({ modalToggle, contactId }) => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const [submitButtonText, setSubmitButtonText] = useState('Add contact');\n  const [errorMessage, setErrorMessage] = useState(null);\n  const dispatch = useDispatch();\n  const { contacts, contactOperationLoading } = useContacts();\n\n  useEffect(() => {\n    if (contactId) {\n      setSubmitButtonText('Update contact');\n      const finnedContactById = contacts.find(\n        contact => contact.id === contactId\n      );\n      setName(finnedContactById.name);\n      setNumber(finnedContactById.number);\n    }\n  }, [contactId, contacts]);\n  useEffect(() => {\n    if (contactOperationLoading) {\n      return () => {\n        setName('');\n        setNumber('');\n        modalToggle();\n      };\n    }\n  }, [contactOperationLoading, modalToggle]);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    setErrorMessage(null);\n\n    const duplicateContactData = contacts.filter(\n      contact => contact.name === name && contact.number === number\n    );\n\n    if (name.length >= 20 || name.length <= 2) {\n      setErrorMessage('Name is to short or to large');\n      return;\n    }\n\n    if (number.length < 12) {\n      setErrorMessage('Number is not valid');\n      return;\n    }\n\n    if (duplicateContactData.length >= 1) {\n      setErrorMessage(`${name} with ${number} already exist`);\n      return;\n    }\n\n    if (!contactId) {\n      dispatch(addContact({ name, number }));\n      return;\n    }\n    dispatch(updateContact({ contactId, name, number }));\n  };\n\n  return (\n    <>\n      <ModalTitle>Enter name and phone number</ModalTitle>\n      <CloseModalBtn type=\"button\" onClick={modalToggle}>\n        <FiX />\n      </CloseModalBtn>\n      <Box\n        as=\"form\"\n        display=\"flex\"\n        flexDirection=\"column\"\n        alignItems=\"center\"\n        onChange={() => {\n          setErrorMessage(null);\n        }}\n        onSubmit={handleSubmit}\n      >\n        <Label>\n          <LabelName>Name</LabelName>\n          <InputName\n            type=\"text\"\n            name=\"name\"\n            value={name}\n            onChange={e => {\n              setName(e.currentTarget.value);\n            }}\n          />\n        </Label>\n        <Label>\n          <LabelName>Number</LabelName>\n          <PhoneInputStyled\n            isValid={value => {\n              if (value.length < 12) {\n                return;\n              } else {\n                return true;\n              }\n            }}\n            type=\"phone\"\n            country={'ua'}\n            value={number}\n            onChange={e => setNumber(e)}\n          />\n        </Label>\n        {errorMessage && (\n          <ErrorMessage>\n            {<ErrorIcon />}\n            {errorMessage}\n          </ErrorMessage>\n        )}\n\n        <Button\n          borderRadius={0}\n          marginTop=\"60px\"\n          isDisabled={errorMessage}\n          type=\"submit\"\n          isLoading={contactOperationLoading}\n          loadingText=\"Working....\"\n          colorScheme=\"teal\"\n          variant=\"solid\"\n          leftIcon={<MdOutlineContactPhone />}\n        >\n          {submitButtonText}\n        </Button>\n      </Box>\n    </>\n  );\n};\n\nContactForm.propTypes = {\n  modalToggle: PropTypes.func.isRequired,\n};\n","import styled from '@emotion/styled';\nimport { BsFillPencilFill, BsFillXCircleFill } from 'react-icons/bs';\n\nexport const ContactListContainer = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  align-items: center;\n  justify-content: center;\n  gap: ${p => p.theme.space[2]};\n  height: 60px;\n  @media screen and (min-width: 1024px) {\n    margin-left: ${p => p.theme.space[3]};\n    margin-top: ${p => p.theme.space[0]};\n  }\n`;\nexport const ContactList = styled.li`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  height: 60px;\n  min-width: 100%;\n  text-align: center;\n  padding: ${p => p.theme.space[2]};\n  background-color: ${p => p.theme.colors.secondaryBg};\n\n  p {\n    font-weight: ${p => p.theme.fontWeights.bold};\n    text-transform: capitalize;\n    font-size: ${p => p.theme.fontSizes.s};\n    min-width: 40%;\n  }\n\n  @media screen and (max-width: 767px) {\n    &:nth-of-type(2n + 1) {\n      background-color: ${p => p.theme.colors.contactBg};\n    }\n  }\n\n  @media screen and (min-width: 768px) {\n    min-width: 375px;\n  }\n\n  @media screen and (min-width: 1024px) {\n    min-width: 450px;\n  }\n`;\n\nexport const EditButton = styled(BsFillPencilFill)`\n  fill: #4271f3;\n  width: 18px;\n  height: 18px;\n  transition: fill 250ms linear;\n  &:hover,\n  &:focus {\n    fill: #1b54f2;\n  }\n`;\n\nexport const DeleteButton = styled(BsFillXCircleFill)`\n  fill: #ce2727;\n  width: 18px;\n  height: 18px;\n  transition: fill 250ms linear;\n  &:hover,\n  &:focus {\n    fill: #fa0000;\n  }\n`;\n\nexport const ContactBtn = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border: ${p => p.theme.borders.none};\n  background-color: transparent;\n\n  padding: ${p => p.theme.space[2]};\n  cursor: pointer;\n`;\n","import { useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/operations';\nimport { useState } from 'react';\nimport {\n  ContactBtn,\n  ContactList,\n  DeleteButton,\n  EditButton,\n} from './ContactsList.styled';\nimport { Box } from '@chakra-ui/react';\nimport { Spinner } from '@chakra-ui/react';\n\nexport const ContactListItem = ({ modalToggle, id, name, number }) => {\n  const [deleteLoading, setDeleteLoading] = useState(false);\n\n  const dispatch = useDispatch();\n\n  const handleDeleteContact = id => {\n    setDeleteLoading(true);\n    dispatch(deleteContact(id));\n  };\n  return (\n    <ContactList>\n      <p>{name}</p>\n      <p>{number}</p>\n      <Box display=\"flex\" minWidth=\"20%\" justifyContent=\"flex-end\">\n        <ContactBtn type=\"button\" onClick={() => modalToggle(id)}>\n          <EditButton />\n        </ContactBtn>\n        <ContactBtn type=\"button\" onClick={() => handleDeleteContact(id)}>\n          {deleteLoading ? (\n            <Spinner size=\"sm\" color=\"red.500\" />\n          ) : (\n            <DeleteButton />\n          )}\n        </ContactBtn>\n      </Box>\n    </ContactList>\n  );\n};\n","import { useMemo } from 'react';\nimport { useContacts } from 'components/hooks/useContacts';\n\nimport { ContactListItem } from './ContactsListItem';\nimport { ContactListContainer } from './ContactsList.styled';\n\nexport const ContactsList = ({ modalToggle }) => {\n  const { contacts, filter } = useContacts();\n\n  const visibleContacts = useMemo(\n    () =>\n      contacts.filter(contact => contact.name.toLowerCase().includes(filter)),\n    [contacts, filter]\n  );\n\n  return (\n    <ContactListContainer as=\"ul\" display=\"flex\" flexWrap=\"wrap\" gridGap={2}>\n      {visibleContacts.map(contact => (\n        <ContactListItem\n          key={contact.id}\n          modalToggle={modalToggle}\n          {...contact}\n        />\n      ))}\n    </ContactListContainer>\n  );\n};\n","import styled from '@emotion/styled';\nimport { FcSearch } from 'react-icons/fc';\n\nexport const FilterHeader = styled.span`\n  font-weight: ${p => p.theme.fontWeights.bold};\n  font-size: ${p => p.theme.fontSizes.ml};\n  margin-right: ${p => p.theme.space[3]};\n`;\n\nexport const FilterIcon = styled(FcSearch)`\n  min-width: 40px;\n  height: 40px;\n  margin-right: 45px;\n`;\n","import { useDispatch } from 'react-redux';\nimport { contactsFilter } from 'redux/contacts/filterSlice';\nimport { Input } from '@chakra-ui/react';\nimport { Box } from '@chakra-ui/react';\n\nimport {\n  Accordion,\n  AccordionItem,\n  AccordionButton,\n  AccordionPanel,\n  AccordionIcon,\n} from '@chakra-ui/react';\nimport { FilterHeader, FilterIcon } from './ContactsFilter.styled.';\n\nexport const ContactsFilter = () => {\n  const dispatch = useDispatch();\n\n  const handleChange = e => {\n    dispatch(contactsFilter(e.currentTarget.value));\n  };\n  return (\n    <Accordion\n      bg=\"secondaryBg\"\n      min-width=\"320px\"\n      mb={1}\n      defaultIndex={[1]}\n      allowMultiple\n    >\n      <AccordionItem>\n        <h2>\n          <AccordionButton\n            justifyContent=\"center\"\n            height={14}\n            _expanded={{ bg: '#2470A0', color: 'white' }}\n          >\n            <Box\n              as=\"span\"\n              display=\"flex\"\n              alignItems=\"center\"\n              textAlign=\"center\"\n            >\n              <FilterIcon width=\"24px\" height=\"24px\" />\n              <FilterHeader>Search </FilterHeader>\n            </Box>\n            <AccordionIcon width=\"35px\" height=\"35px\" />\n          </AccordionButton>\n        </h2>\n        <AccordionPanel display=\"flex\" justifyContent=\"center\" pb={2}>\n          {\n            <Input\n              type=\"text\"\n              name=\"filter\"\n              onChange={handleChange}\n              width=\"350px\"\n              variant=\"filled\"\n              placeholder=\"Enter name to find\"\n              p={2}\n            />\n          }\n        </AccordionPanel>\n      </AccordionItem>\n    </Accordion>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const ContactsCountContainer = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  height: 56px;\n  font-size: ${p => p.theme.fontSizes.ml};\n  background: ${p => p.theme.colors.secondaryBg};\n  margin-bottom: ${p => p.theme.space[1]};\n\n  span {\n    font-size: ${p => p.theme.fontSizes.l};\n    font-weight: ${p => p.theme.fontWeights.bold};\n  }\n  svg {\n    margin-right: ${p => p.theme.space[3]};\n    width: 40px;\n    height: 40px;\n  }\n  p {\n    margin-left: ${p => p.theme.space[3]};\n  }\n\n  @media screen and (min-width: 768px) {\n    justify-content: space-around;\n  }\n`;\n","import { useContacts } from 'components/hooks/useContacts';\nimport { ContactsCountContainer } from './ContactsCount.styled';\nimport { FcBusinessContact } from 'react-icons/fc';\nimport { Box, Spinner } from '@chakra-ui/react';\n\nexport const ContactsCount = () => {\n  const { contacts, contactOperationLoading } = useContacts();\n\n  return (\n    <ContactsCountContainer>\n      <Box display=\"flex\" alignItems=\"center\">\n        <FcBusinessContact />\n        {contactOperationLoading ? (\n          <Spinner color=\"teal\" />\n        ) : (\n          <span>{contacts.length}</span>\n        )}\n        <p>contacts</p>\n      </Box>\n    </ContactsCountContainer>\n  );\n};\n","import styled from '@emotion/styled';\nimport { FcPlus } from 'react-icons/fc';\n\nexport const AddContactIcon = styled(FcPlus)`\n  width: 40px;\n  height: 40px;\n  margin-right: 34px;\n  fill: green;\n`;\n","import { Button } from '@chakra-ui/react';\n\nimport { AddContactIcon } from './AddContactButton.styled';\nexport const AddContactButton = ({ modalToggle }) => {\n  return (\n    <Button\n      display=\"flex\"\n      justifyContent=\"center\"\n      textAlign=\"center\"\n      borderRadius=\"none\"\n      w=\"100%\"\n      height={14}\n      type=\"button\"\n      onClick={modalToggle}\n      isLoading={false}\n      loadingText=\"Loading\"\n      colorScheme=\"teal\"\n      variant=\"solid\"\n      spinnerPlacement=\"start\"\n      fontSize={24}\n    >\n      <AddContactIcon />\n      Add Contact\n    </Button>\n  );\n};\n","import { Progress } from '@chakra-ui/react';\nimport styled from '@emotion/styled';\n\nexport const ContactContainer = styled.div`\n  background-color: ${p => p.theme.colors.thirdBg};\n  height: 100vh;\n  padding-top: ${p => p.theme.space[2]};\n  @media screen and (min-width: 768px) {\n    padding-top: ${p => p.theme.space[3]};\n  }\n\n  @media screen and (min-width: 1024px) {\n    display: flex;\n  }\n`;\n\nexport const ContactBar = styled.div`\n  margin-bottom: ${p => p.theme.space[2]};\n\n  @media screen and (min-width: 1024px) {\n    min-width: 400px;\n  }\n`;\n\nexport const LoadingProgress = styled(Progress)`\n  position: absolute;\n  top: 70px;\n  left: 0;\n  width: 100%;\n`;\n","import { useEffect, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Modal } from 'components/Modal/Modal';\nimport { ContactForm } from '../components/ContactForm/ContactForm';\nimport { ContactsList } from './../components/ContactsList/ContactsList';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { ContactsFilter } from 'components/ContactsFilter/ContactsFilter';\n\nimport { ContactsCount } from './../components/ContactsCount/ContactsCount';\nimport { AddContactButton } from './../components/AddContactButton/AddContactButton';\nimport {\n  ContactBar,\n  ContactContainer,\n  LoadingProgress,\n} from './PageStyles/Contacts.styled';\nimport { useContacts } from 'components/hooks/useContacts';\n\nconst Contacts = () => {\n  const [modalShow, setModalShow] = useState(false);\n  const [contactId, setContactId] = useState(null);\n  const { contactOperationLoading } = useContacts();\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const modalToggle = e => {\n    setModalShow(!modalShow);\n    if (typeof e === 'object') {\n      setContactId(null);\n      return;\n    }\n    setContactId(e);\n  };\n\n  return (\n    <ContactContainer>\n      <ContactBar>\n        <ContactsCount />\n        <ContactsFilter />\n        <AddContactButton modalToggle={modalToggle} />\n      </ContactBar>\n\n      {contactOperationLoading && <LoadingProgress size=\"xs\" isIndeterminate />}\n      <ContactsList modalToggle={modalToggle} />\n      {modalShow && (\n        <Modal modalToggle={modalToggle}>\n          <ContactForm modalToggle={modalToggle} contactId={contactId} />\n        </Modal>\n      )}\n    </ContactContainer>\n  );\n};\n\nexport default Contacts;\n"],"names":["Backdrop","styled","ModalWindow","p","theme","space","colors","secondaryBg","shadows","items","modalRoot","document","getElementById","Modal","modalToggle","children","useEffect","window","addEventListener","handleMultiClose","removeEventListener","e","currentTarget","target","code","createPortal","onClick","selectContacts","state","contacts","selectFilter","filter","selectIsLoading","isLoading","useContacts","useSelector","contactOperationLoading","CloseModalBtn","ModalTitle","fontWeights","bold","fontSizes","ml","Label","LabelName","InputName","radii","none","value","length","errorBg","error","PhoneInputStyled","PhoneInput","ErrorMessage","s","borders","light","normal","ErrorIcon","FiAlertTriangle","secondaryBorder","ContactForm","contactId","useState","name","setName","number","setNumber","submitButtonText","setSubmitButtonText","errorMessage","setErrorMessage","dispatch","useDispatch","finnedContactById","find","contact","id","type","as","display","flexDirection","alignItems","onChange","onSubmit","preventDefault","duplicateContactData","updateContact","addContact","isValid","country","borderRadius","marginTop","isDisabled","loadingText","colorScheme","variant","leftIcon","ContactListContainer","ContactList","contactBg","EditButton","BsFillPencilFill","DeleteButton","BsFillXCircleFill","ContactBtn","ContactListItem","deleteLoading","setDeleteLoading","minWidth","justifyContent","deleteContact","handleDeleteContact","size","color","ContactsList","visibleContacts","useMemo","toLowerCase","includes","flexWrap","gridGap","map","FilterHeader","FilterIcon","FcSearch","ContactsFilter","bg","mb","defaultIndex","allowMultiple","height","_expanded","textAlign","width","pb","I","contactsFilter","placeholder","ContactsCountContainer","l","ContactsCount","AddContactIcon","FcPlus","AddContactButton","w","spinnerPlacement","fontSize","ContactContainer","thirdBg","ContactBar","LoadingProgress","Progress","modalShow","setModalShow","setContactId","fetchContacts","isIndeterminate"],"sourceRoot":""}